{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mihir\\\\OneDrive\\\\Documents\\\\HouseTinder\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [houses, setHouses] = useState([]); // State to hold the house information\n\n  useEffect(() => {\n    // Fetch the house data from the backend\n    const fetchHouses = async () => {\n      try {\n        const response = await fetch('http://localhost:5000'); // Adjust the URL if necessary\n        if (response.ok) {\n          const data = await response.json();\n          setHouses(data['random_samples']); // Access the house data from the JSON response\n        } else {\n          console.error('Failed to fetch house data');\n        }\n      } catch (error) {\n        console.error('Error fetching house data:', error);\n      }\n    };\n    fetchHouses();\n  }, []); // Empty dependency array ensures the fetch runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"House Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), houses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: houses.map((house, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sales Price From Assessment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }, this), \" $\", house.SalesPriceFromAssessment.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lot Size or Area:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this), \" \", house.LotSizeOrArea, \" sq ft\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Year Built:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }, this), \" \", house.YearBuilt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Number of Bedrooms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }, this), \" \", house.NumberOfBedrooms]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Number of Bathrooms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 18\n          }, this), \" \", house.NumberOfBaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Predicted Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 18\n          }, this), \" $\", house.PredictedPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading house data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"uVrlBdZXE7UlozWQ5kHSTXO6X74=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","houses","setHouses","fetchHouses","response","fetch","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","house","index","SalesPriceFromAssessment","toFixed","LotSizeOrArea","YearBuilt","NumberOfBedrooms","NumberOfBaths","PredictedPrice","_c","$RefreshReg$"],"sources":["C:/Users/mihir/OneDrive/Documents/HouseTinder/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Home() {\r\n  const [houses, setHouses] = useState([]); // State to hold the house information\r\n\r\n  useEffect(() => {\r\n    // Fetch the house data from the backend\r\n    const fetchHouses = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000'); // Adjust the URL if necessary\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setHouses(data['random_samples']); // Access the house data from the JSON response\r\n        } else {\r\n          console.error('Failed to fetch house data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching house data:', error);\r\n      }\r\n    };\r\n\r\n    fetchHouses();\r\n  }, []); // Empty dependency array ensures the fetch runs only once\r\n\r\n  return (\r\n    <div>\r\n      <h1>House Listings</h1>\r\n      {houses.length > 0 ? (\r\n        <div>\r\n          {houses.map((house, index) => (\r\n            <div key={index}>\r\n              <p><strong>Sales Price From Assessment:</strong> ${house.SalesPriceFromAssessment.toFixed(2)}</p>\r\n              <p><strong>Lot Size or Area:</strong> {house.LotSizeOrArea} sq ft</p>\r\n              <p><strong>Year Built:</strong> {house.YearBuilt}</p>\r\n              <p><strong>Number of Bedrooms:</strong> {house.NumberOfBedrooms}</p>\r\n              <p><strong>Number of Bathrooms:</strong> {house.NumberOfBaths}</p>\r\n              <p><strong>Predicted Price:</strong> ${house.PredictedPrice.toFixed(2)}</p>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>Loading house data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;QACvD,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,SAAS,CAACK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBd,MAAM,CAACe,MAAM,GAAG,CAAC,gBAChBlB,OAAA;MAAAa,QAAA,EACGV,MAAM,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,EAACG,KAAK,CAACE,wBAAwB,CAACC,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjGjB,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,KAAK,CAACI,aAAa,EAAC,QAAM;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACrEjB,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,KAAK,CAACK,SAAS;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDjB,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,KAAK,CAACM,gBAAgB;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpEjB,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,KAAK,CAACO,aAAa;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClEjB,OAAA;UAAAa,QAAA,gBAAGb,OAAA;YAAAa,QAAA,EAAQ;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,EAACG,KAAK,CAACQ,cAAc,CAACL,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3EjB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAPEI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENjB,OAAA;MAAAa,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CA5CQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA8Cb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}